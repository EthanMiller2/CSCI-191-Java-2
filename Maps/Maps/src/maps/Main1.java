/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package maps;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import javax.swing.JFileChooser;
import javax.swing.JPanel;

/**
 *
 * @author ethanmiller
 */
public class Main1 extends javax.swing.JFrame {
JFileChooser fileChooser = new JFileChooser();

    /**
     * Creates new form Main1
     */
    public Main1() {
        initComponents();
    }
public class MyPanel extends JPanel {
  @Override
       public void paint(Graphics g1) {
           super.paint(g1);
           // Place code to draw the map here
           Graphics2D g = (Graphics2D)(g1);
           Graphics2D g2 = (Graphics2D) g;
                  
            RenderingHints rh = new RenderingHints(
                    RenderingHints.KEY_ANTIALIASING,
                    RenderingHints.VALUE_ANTIALIAS_ON);

           for (City c : City.cities )
           {
              g.setColor(Color.BLACK);
              g.drawString(c.name,c.x-10, c.y-10);
              g.fillOval(c.x - 2, c.y - 2, 5, 5);
             for(Road r : c.roads)
             {
                 g2.setColor(Color.RED);
                 g2.drawLine(r.startCity.x,r.startCity.y, r.endCity.x, r.endCity.y);
             }
           }
           
           
           }
       }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mapPanel = new MyPanel();
        loadFile = new javax.swing.JButton();
        directions = new javax.swing.JButton();
        statusDisplay = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1200, 650));

        mapPanel.setPreferredSize(new java.awt.Dimension(1000, 650));

        javax.swing.GroupLayout mapPanelLayout = new javax.swing.GroupLayout(mapPanel);
        mapPanel.setLayout(mapPanelLayout);
        mapPanelLayout.setHorizontalGroup(
            mapPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1000, Short.MAX_VALUE)
        );
        mapPanelLayout.setVerticalGroup(
            mapPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 650, Short.MAX_VALUE)
        );

        loadFile.setText("Load Map");
        loadFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadFileActionPerformed(evt);
            }
        });

        directions.setText("Directions");
        directions.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                directionsActionPerformed(evt);
            }
        });

        statusDisplay.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        statusDisplay.setText("Maps");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(mapPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(loadFile)
                            .addComponent(directions)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(565, 565, 565)
                        .addComponent(statusDisplay)))
                .addContainerGap(124, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(statusDisplay)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(loadFile)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(directions)
                        .addGap(586, 586, 586))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mapPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(21, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loadFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadFileActionPerformed
        // TODO add your handling code here:
        int retval = fileChooser.showOpenDialog(this);
        if (retval == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            try {
                BufferedReader reader = new BufferedReader(new FileReader(file));
                String s;
                boolean readcity = true;
                String [] parse;
                String cityname;
                int cityx, cityy;
                String roadname, startCity, endCity;
                int length, travelTime;
                 
                
                while ((s = reader.readLine()) != null) {
                    
                    if(s.equals (",,,,"))
                    {
                        readcity = false;
                        
                                
                    }
                    else if(readcity)
                    {
                      parse = s.split(",");
                      cityname = parse[0];
                      cityx = Integer.parseInt(parse[1]);
                      cityy = Integer.parseInt(parse[2]);
                      City c = new City(cityname, cityx, cityy);
                      
                    }
                    else if(!readcity)
                    {
                        parse = s.split(",");
                     roadname = parse[0];
                     startCity = parse[1];
                     endCity = parse[2];
                     length = Integer.parseInt(parse[3]);
                     travelTime = Integer.parseInt(parse[4]);
                     Road r1 = new Road(roadname, startCity, endCity, length, travelTime);
                     Road r2 = new Road(roadname, endCity, startCity, length, travelTime);
                    }         
                }
                for(City c: City.cities)
                {
                    System.out.println(c);
                    for (Road r: c.roads)
                    {
                        System.out.println(r);  
                    }
                }
            } catch (Exception e) {
                statusDisplay.setText("Error" + e);
              }
        }
        mapPanel.repaint();
    }//GEN-LAST:event_loadFileActionPerformed

    private void directionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_directionsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_directionsActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton directions;
    private javax.swing.JButton loadFile;
    private javax.swing.JPanel mapPanel;
    private javax.swing.JLabel statusDisplay;
    // End of variables declaration//GEN-END:variables
}
